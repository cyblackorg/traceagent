version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
    environment:
      - FLASK_ENV=${FLASK_ENV:-development}
      - FLASK_DEBUG=${FLASK_DEBUG:-1}
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # LLM Provider Configuration (uncomment and configure as needed)
      # - LLM_PROVIDER=deepseek
      # - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - LLM_PROVIDER=${LLM_PROVIDER:-openai}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=gpt-4
      # - LLM_PROVIDER=anthropic
      # - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      # - LLM_PROVIDER=google
      # - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    networks:
      - traceagent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["gunicorn", "-w", "3", "-b", "0.0.0.0:5000", "app:app"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL:-/api}
        - REACT_APP_ENV=${REACT_APP_ENV:-production}
    ports:
      - "3000:80"
    # No bind mounts in production to avoid volume merge issues
    environment:
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL:-/api}
      - REACT_APP_ENV=${REACT_APP_ENV:-production}
    networks:
      - traceagent-network
    depends_on:
      - backend
    restart: unless-stopped
    # No healthcheck: nginx image lacks curl/wget by default
    stdin_open: true
    tty: true

networks:
  traceagent-network:
    driver: bridge

volumes:
  node_modules: 
